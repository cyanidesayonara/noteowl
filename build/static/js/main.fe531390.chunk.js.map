{"version":3,"sources":["components/FilterNotes.js","components/LoginForm.js","components/LogoutForm.js","components/Navbar.js","components/Notification.js","components/NoteDate.js","components/Delete.js","components/ColorChanger.js","components/NoteControls.js","components/Note.js","components/Notes.js","services/notes.js","services/login.js","App.js","serviceWorker.js","index.js"],"names":["FilterNotes","_ref","filter","handleInputChange","react_default","a","createElement","className","placeholder","value","name","onChange","LoginForm","login","username","password","loginMessage","onSubmit","type","LogoutForm","user","logout","Navbar","title","newNote","filterValue","components_FilterNotes","onClick","components_LoginForm","components_LogoutForm","Notification","message","NoteDate","text","date","dist_default","format","Delete","note","handleRemove","id","ColorChanger","colors","saveNote","map","color","checked","onMouseDown","onMouseUp","NoteControls","components_Delete","components_ColorChanger","Note","handleDrag","index","divStyle","zIndex","react_draggable_default","cancel","position","bounds","onStop","onDrag","style","components_Notification","notification","lib_default","onBlur","onResize","e","components_NoteDate","created","updated","content","components_NoteControls","Notes","notes","components_Note","key","token","services_notes","setToken","newToken","concat","removeToken","getAll","Object","asyncToGenerator","regenerator_default","mark","_callee","response","wrap","_context","prev","next","axios","get","sent","abrupt","data","stop","this","apply","arguments","create","_ref2","_callee2","config","_context2","headers","Authorization","post","_x","update","_ref3","_callee3","_context3","put","_x2","remove","_ref4","_callee4","_context4","delete","_x3","services_login","credentials","App","props","_this","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","hideNotification","setTimeout","state","findIndex","n","defineProperty","$set","setState","event","preventDefault","noteService","window","localStorage","removeItem","exception","loginService","setItem","JSON","stringify","t0","find","Date","important","x","y","then","createdNote","catch","error","console","log","updatedNote","author","confirm","ui","deltaX","toFixed","deltaY","target","_this2","document","loggedUserJSON","getItem","parse","ReactGA","initialize","pageview","_this3","toLowerCase","includes","components_Navbar","components_Notes","Component","Boolean","location","hostname","match","ReactDOM","render","src_App","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.fe531390.chunk.js","sourcesContent":["import React from 'react'\r\n\r\nconst FilterNotes = ({ filter, handleInputChange }) => {\r\n  return (\r\n    <div className='d-none'>\r\n      <input\r\n        placeholder='Filter notes'\r\n        value={ filter }\r\n        name='filter'\r\n        onChange={ handleInputChange(null) }\r\n      />\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default FilterNotes","import React from 'react'\r\n\r\nconst LoginForm = ({\r\n  login,\r\n  username,\r\n  password,\r\n  handleInputChange,\r\n  loginMessage\r\n}) => {\r\n  return (\r\n    <form onSubmit={ login }>\r\n      <span>\r\n        { loginMessage }\r\n      </span>\r\n      <input\r\n        type='text'\r\n        placeholder='Username'\r\n        name='username'\r\n        value={ username }\r\n        onChange={ handleInputChange(null) }\r\n      />\r\n      <input\r\n        type='password'\r\n        placeholder='Password'\r\n        name='password'\r\n        value={ password }\r\n        onChange={ handleInputChange(null) }\r\n      />\r\n      <button type='submit'>Login</button>\r\n    </form>\r\n  )\r\n}\r\n\r\nexport default LoginForm","import React from 'react'\r\n\r\nconst LogoutForm = ({\r\n  user,\r\n  logout\r\n}) => {\r\n  return (\r\n    <form onSubmit={ logout }>\r\n      <button type=\"submit\">\r\n        Logout&nbsp;\r\n        { user.username }\r\n      </button>\r\n    </form>\r\n  )\r\n}\r\n\r\nexport default LogoutForm","import React from 'react'\r\nimport FilterNotes from './FilterNotes.js'\r\nimport LoginForm from './LoginForm.js'\r\nimport LogoutForm from './LogoutForm.js'\r\n\r\nconst Navbar = ({\r\n  title,\r\n  login,\r\n  logout,\r\n  newNote,\r\n  filterValue,\r\n  handleInputChange,\r\n  username,\r\n  password,\r\n  user,\r\n  loginMessage\r\n}) => {\r\n  return (\r\n    <nav>\r\n      <h1>\r\n        { title }\r\n      </h1>\r\n      <FilterNotes\r\n        filterValue={ filterValue }\r\n        handleInputChange={ handleInputChange }\r\n      />\r\n      <button onClick={ newNote } type='button'>\r\n        New note\r\n      </button>\r\n      {\r\n        user === null &&\r\n        <LoginForm\r\n          login={ login }\r\n          username={ username }\r\n          password={ password }\r\n          handleInputChange={ handleInputChange }\r\n          loginMessage={ loginMessage }\r\n        />\r\n      }\r\n      {\r\n        user !== null &&\r\n        <LogoutForm\r\n          logout={ logout }\r\n          user={ user }\r\n        />\r\n      }\r\n\r\n    </nav>\r\n  )\r\n}\r\n\r\nexport default Navbar","import React from 'react'\n\nconst Notification = ({ message }) => {\n  if (message === null) {\n    return null\n  }\n  return (\n    <div className=\"notification\">\n      { message }\n    </div>\n  )\n}\n\nexport default Notification","import React from 'react'\r\nimport Moment from 'react-moment'\r\n\r\nconst NoteDate = ({ text, date }) => {\r\n  if (date === null) {\r\n    return null\r\n  }\r\n  return (\r\n    <div className='note-date'>\r\n      <span>{ text }</span>\r\n      <Moment format='ddd DD MMM YYYY HH:mm'>{ date }</Moment>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default NoteDate","import React from 'react'\r\n\r\nconst Delete = ({\r\n  note,\r\n  user,\r\n  handleRemove,\r\n}) => {\r\n  if (note.user === 0 || user && note.user === user.id) {\r\n    return (\r\n      <button type='button' onClick={ handleRemove(note) }>\r\n        Delete\r\n      </button>\r\n    )\r\n  } else {\r\n    return null\r\n  }\r\n}\r\n\r\nexport default Delete","import React from 'react'\r\n\r\nconst ColorChanger = ({\r\n  colors,\r\n  note,\r\n  handleInputChange,\r\n  saveNote,\r\n}) => {\r\n  return (\r\n    <div className='color-changer' >\r\n      {\r\n        colors.map(color => {\r\n          let checked = false\r\n          if (note.color === color) {\r\n            checked = true\r\n          }\r\n          return (\r\n            <div\r\n              className={ 'color-input color-' + color }\r\n            >\r\n              <input\r\n                name='color'\r\n                value={ color }\r\n                onMouseDown={ handleInputChange(note) }\r\n                onMouseUp={ saveNote(note) }\r\n                type='checkbox'\r\n                checked={ checked }\r\n              />\r\n            </div>\r\n          )\r\n        })\r\n      }\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default ColorChanger","import React from 'react'\r\nimport Delete from './Delete'\r\nimport ColorChanger from './ColorChanger.js'\r\n\r\nconst NoteControls = ({\r\n  user,\r\n  note,\r\n  handleRemove,\r\n  handleInputChange,\r\n  saveNote,\r\n  colors,\r\n}) => {\r\n  return (\r\n    <div\r\n      className='note-controls'\r\n    >\r\n      <Delete\r\n        note={ note }\r\n        user={ user }\r\n        handleRemove={ handleRemove }\r\n      />\r\n      <ColorChanger\r\n        note={ note } \r\n        handleInputChange={ handleInputChange }\r\n        colors={ colors }\r\n        saveNote={ saveNote }\r\n      />\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default NoteControls","import React from 'react'\r\nimport TextareaAutosize from 'react-autosize-textarea'\r\nimport Draggable from 'react-draggable'\r\nimport Notification from './Notification'\r\nimport NoteDate from './NoteDate'\r\nimport NoteControls from './NoteControls.js'\r\n\r\nconst Note = ({\r\n  note,\r\n  user,\r\n  handleRemove,\r\n  handleDrag,\r\n  saveNote,\r\n  handleInputChange,\r\n  index,\r\n  colors,\r\n}) => {\r\n  const zIndex = 8000 + index\r\n  const divStyle = {\r\n    zIndex: zIndex,\r\n  }\r\n  return (\r\n    <Draggable\r\n      cancel='.note form>*'\r\n      position={ note.position }\r\n      bounds='parent'\r\n      onStop={ saveNote(note) }\r\n      onDrag={ handleDrag(note) }\r\n    >\r\n      <div\r\n        className={ 'note color-' + note.color }\r\n        style={ divStyle }\r\n      >\r\n        <Notification message={ note.notification } />\r\n        <form onSubmit={ saveNote(note) }>\r\n          <h3>\r\n            <TextareaAutosize\r\n              onBlur={ saveNote(note) }\r\n              onResize={(e) => {}}\r\n              value={ note.title }\r\n              name=\"title\"\r\n              placeholder='Title'\r\n              onChange={ handleInputChange(note) }\r\n            />\r\n            <span className='border'></span>\r\n          </h3>\r\n          <NoteDate text='Created: ' date={ note.created } />\r\n          <NoteDate text='Saved: ' date={ note.updated } />\r\n          <p>\r\n            <TextareaAutosize\r\n              onBlur={ saveNote(note) }\r\n              onResize={(e) => {}}\r\n              value={ note.content }\r\n              name=\"content\"\r\n              placeholder='Add text here'\r\n              onChange={ handleInputChange(note) }\r\n            />\r\n            <span className='border'></span>\r\n          </p>\r\n          <NoteControls\r\n            user={ user }\r\n            note={ note }\r\n            handleRemove={ handleRemove }\r\n            colors={ colors }\r\n            handleInputChange={ handleInputChange }\r\n            saveNote={ saveNote }\r\n          / >\r\n        </form>\r\n      </div>\r\n    </Draggable>\r\n  )\r\n}\r\n\r\nexport default Note","import React from 'react'\r\nimport Note from './Note'\r\n\r\nconst Notes = ({\r\n  notes,\r\n  user,\r\n  handleRemove,\r\n  handleDrag,\r\n  saveNote,\r\n  handleInputChange\r\n}) => {\r\n  const colors = ['yellow', 'blue', 'red', 'green',]\r\n  return (\r\n    <div id='notes'>\r\n      { notes.map((note, index) =>\r\n        <Note\r\n          key={ note.id }\r\n          note={ note }\r\n          user={ user }\r\n          handleRemove={ handleRemove }\r\n          handleDrag={ handleDrag }\r\n          saveNote={ saveNote }\r\n          handleInputChange={ handleInputChange }\r\n          index={ index }\r\n          colors={ colors }\r\n        />\r\n      ) }\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Notes","import axios from 'axios'\r\nconst baseUrl = '/notes'\r\n\r\nlet token = null\r\n\r\nconst setToken = (newToken) => {\r\n  token = `bearer ${newToken}`\r\n}\r\n\r\nconst removeToken = () => {\r\n  token = null\r\n}\r\n\r\nconst getAll = async () => {\r\n  const response = await axios.get(baseUrl)\r\n  return response.data\r\n}\r\n\r\nconst create = async (note) => {\r\n  const config = { headers: { 'Authorization': token } }\r\n  const response = await axios.post(baseUrl, note, config)\r\n  return response.data\r\n}\r\n\r\nconst update = async (note) => {\r\n  const config = { headers: { 'Authorization': token } }  \r\n  const response = await axios.put(`${baseUrl}/${note.id}`, note, config)\r\n  return response.data\r\n}\r\n\r\nconst remove = async (note) => {\r\n  const config = { headers: { 'Authorization': token } }  \r\n  const response = await axios.delete(`${baseUrl}/${note.id}`, config)\r\n  return response.data\r\n}\r\n\r\nexport default { setToken, removeToken, getAll, create, update, remove }","import axios from 'axios'\r\nconst baseUrl = '/login'\r\n\r\nconst login = async (credentials) => {\r\n  const response = await axios.post(baseUrl, credentials)\r\n  return response.data\r\n}\r\n\r\nexport default { login }","import React, { Component } from 'react'\r\nimport Navbar from './components/Navbar.js'\r\nimport Notes from './components/Notes.js'\r\nimport noteService from './services/notes.js'\r\nimport loginService from './services/login.js'\r\nimport update from 'immutability-helper'\r\nimport ReactGA from 'react-ga'\r\n\r\nclass App extends Component {\r\n  constructor(props) {\r\n    super(props)\r\n    this.state = {\r\n      notes: [],\r\n      filter: '',\r\n      username: '',\r\n      password: '',\r\n      user: null,\r\n      loginMessage: null\r\n    }\r\n  }\r\n\r\n  // set notification to null after timeout\r\n  hideNotification = (note) => {\r\n    const timeout = 3000\r\n    setTimeout(() => {\r\n      const index = this.state.notes.findIndex(n => n.id === note.id)\r\n      // if note not found, index will be -1\r\n      if (index >= 0) {\r\n        const notes = update(this.state.notes, {\r\n          [index]: { ['notification']: { $set: null } }\r\n        })\r\n        this.setState({ notes: notes })\r\n      }\r\n    }, timeout)\r\n  }\r\n\r\n  componentDidMount() {\r\n    document.title = 'NoteOwl'\r\n\r\n    // load notes\r\n    noteService\r\n      .getAll()\r\n      .then(notes => { this.setState({ notes: notes }) })\r\n\r\n    // sve user to local storage\r\n    const loggedUserJSON = window.localStorage.getItem('user')\r\n    if (loggedUserJSON) {\r\n      const user = JSON.parse(loggedUserJSON)\r\n      this.setState({ user: user })\r\n      noteService.setToken(user.token)\r\n    }\r\n\r\n    // initialize GA\r\n    ReactGA.initialize('UA-120584024-4')\r\n    ReactGA.pageview('/')\r\n  }\r\n\r\n  logout = async (event) => {\r\n    event.preventDefault()\r\n\r\n    try {\r\n      noteService.removeToken(this.state.user.token)\r\n      window.localStorage.removeItem('user')\r\n      this.setState({ user: null })\r\n    } catch (exception) {\r\n      this.setState({ user: null })\r\n    }\r\n  }\r\n\r\n  login = async (event) => {\r\n    event.preventDefault()\r\n\r\n    try {\r\n      const user = await loginService.login({\r\n        username: this.state.username,\r\n        password: this.state.password\r\n      })\r\n\r\n      window.localStorage.setItem('user', JSON.stringify(user))\r\n      noteService.setToken(user.token)\r\n\r\n      this.setState({ user: user, username: '', password: ''})\r\n    } catch (exception) {\r\n      this.setState({ loginMessage: 'Username and/or password incorrect' })\r\n      setTimeout(() => { this.setState({ loginMessage: null }) }, 3000)\r\n    }\r\n  }\r\n\r\n  newNote = () => {\r\n    if (!this.state.notes.find(n => n.id === 0)) {\r\n      const note = {\r\n        id: 0,\r\n        title: '',\r\n        content: '',\r\n        created: new Date(),\r\n        updated: null,\r\n        important: false,\r\n        notification: null,\r\n        position: { x: 0, y: 0 },\r\n        user: 0,\r\n        color: 'yellow',\r\n      }\r\n      this.setState({ notes: this.state.notes.concat(note) })\r\n    }\r\n  }\r\n\r\n  saveNote = (note) => () => {\r\n    if (note.title && note.content) {\r\n      if (this.state.user) {\r\n        if (note.id === 0) {\r\n          noteService\r\n            .create(note)\r\n            .then(createdNote => {\r\n              createdNote.notification = 'Note saved'\r\n              const notes = this.state.notes.filter(n => n.id !== 0)\r\n              this.setState({ notes: notes.concat(createdNote) })\r\n              this.hideNotification(createdNote)\r\n            })\r\n            .catch(error => { console.log(error) })\r\n        } else {\r\n          noteService\r\n            .update(note)\r\n            .then(updatedNote => {\r\n              updatedNote.notification = 'Note saved'\r\n              const notes = this.state.notes.filter(n => n.id !== updatedNote.id)\r\n              this.setState({ notes: notes.concat(updatedNote) })\r\n              this.hideNotification(updatedNote)\r\n            })\r\n            .catch(error => { console.log(error) })\r\n        }\r\n      } else {\r\n        note.notification = 'Login to save note'\r\n        const notes = this.state.notes.filter(n => n.id !== note.id)\r\n        this.setState({ notes: notes.concat(note) })\r\n        this.hideNotification(note)\r\n      }\r\n    }\r\n  }\r\n\r\n  handleRemove = (note) => () => {\r\n    if (!note.author) {\r\n      if (window.confirm('Are you sure you want to remove this note?')) {\r\n        if (note.id === 0) {\r\n          const notes = this.state.notes.filter(n => n.id !== note.id)\r\n          this.setState({ notes: notes })\r\n        } else {\r\n          noteService\r\n            .remove(note)\r\n            .then(response => {\r\n              const notes = this.state.notes.filter(n => n.id !== note.id)\r\n              this.setState({ notes: notes })\r\n            })\r\n            .catch(error => {\r\n              const notes = this.state.notes.filter(n => n.id !== note.id)\r\n              this.setState({ notes: notes })\r\n            })\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  handleDrag = (note) => (event, ui) => {\r\n    const notes = this.state.notes.filter(n => n.id !== note.id)\r\n    if (!note.position) {\r\n      note.position = { x: 0, y: 0 }\r\n    }\r\n    note.position = {\r\n      x: +note.position.x + +ui.deltaX.toFixed(0),\r\n      y: +note.position.y + +ui.deltaY.toFixed(0)\r\n    }\r\n    this.setState({ notes: notes.concat(note) })\r\n  }\r\n\r\n  handleInputChange = (note) => {\r\n    return (event) => {\r\n      const value = event.target.value\r\n      const name = event.target.name\r\n      if (note) {\r\n        const index = this.state.notes.findIndex(n => n.id === note.id)\r\n        const notes = update(this.state.notes, {\r\n          [index]: { [name]: { $set: value } }\r\n        })\r\n        this.setState({ notes: notes })\r\n      } else {\r\n        this.setState({ [name]: value })\r\n      }\r\n    }\r\n  }\r\n\r\n  render() {\r\n    const notes = this.state.notes.filter(note =>\r\n      note.title.toLowerCase().includes(this.state.filter.toLowerCase()) ||\r\n      note.content.toLowerCase().includes(this.state.filter.toLowerCase())\r\n    )\r\n    return (\r\n      <div id='content'>\r\n        <Navbar\r\n          title=\"Noteowl\"\r\n          login={ this.login }\r\n          logout={ this.logout }\r\n          newNote={ this.newNote }\r\n          handleInputChange={ this.handleInputChange }\r\n          filter={ this.state.filter }\r\n          username={ this.state.username }\r\n          password={ this.state.password }\r\n          user={ this.state.user }\r\n          loginMessage={ this.state.loginMessage }\r\n        />\r\n        <Notes\r\n          notes={ notes }\r\n          handleRemove={ this.handleRemove }\r\n          handleDrag={ this.handleDrag }\r\n          saveNote={ this.saveNote }\r\n          user={ this.state.user }\r\n          handleInputChange={ this.handleInputChange }\r\n        />\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default App","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n)\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href)\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets see https://github.com/facebook/create-react-app/issues/2374\n      return\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config)\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          )\n        })\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config)\n      }\n    })\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing\n        if (installingWorker === null) {\n          return\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              )\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration)\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.')\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration)\n              }\n            }\n          }\n        }\n      }\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error)\n    })\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type')\n      if (\n        response.status === 404 ||\n        (contentType !== null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload()\n          })\n        })\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config)\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      )\n    })\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister()\n    })\n  }\n}\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport './index.css'\nimport App from './App'\nimport * as serviceWorker from './serviceWorker'\n\nReactDOM.render(<App />, document.getElementById('root'))\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister()"],"sourceRoot":""}