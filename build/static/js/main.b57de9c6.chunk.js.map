{"version":3,"sources":["components/FilterNotes.js","components/LoginForm.js","components/LogoutForm.js","components/Navbar.js","components/Notification.js","components/Date.js","components/Delete.js","components/Note.js","components/Notes.js","services/notes.js","services/login.js","App.js","serviceWorker.js","index.js"],"names":["FilterNotes","_ref","filter","handleInputChange","react_default","a","createElement","className","placeholder","value","name","onChange","LoginForm","login","username","password","loginMessage","onSubmit","type","LogoutForm","user","logout","Navbar","title","newNote","filterValue","components_FilterNotes","onClick","components_LoginForm","components_LogoutForm","Notification","message","Date","date","dist_default","Delete","note","handleRemove","id","Note","handleDrag","saveNote","react_draggable_default","cancel","position","bounds","onStop","onDrag","components_Notification","notification","lib_default","onBlur","onResize","e","components_Date","content","components_Delete","Notes","notes","map","components_Note","key","token","services_notes","setToken","newToken","concat","removeToken","getAll","Object","asyncToGenerator","regenerator_default","mark","_callee","response","wrap","_context","prev","next","axios","get","sent","abrupt","data","stop","this","apply","arguments","create","_ref2","_callee2","config","_context2","headers","Authorization","post","_x","update","_ref3","_callee3","_context3","put","_x2","remove","_ref4","_callee4","_context4","delete","_x3","services_login","credentials","App","props","_this","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","hideNotification","setTimeout","index","state","findIndex","n","defineProperty","$set","setState","event","preventDefault","noteService","window","localStorage","removeItem","exception","loginService","setItem","JSON","stringify","t0","find","created","updated","important","x","y","then","createdNote","catch","error","console","log","updatedNote","author","confirm","ui","deltaX","toFixed","deltaY","target","_this2","document","loggedUserJSON","getItem","parse","ReactGA","initialize","pageview","_this3","toLowerCase","includes","components_Navbar","components_Notes","Component","Boolean","location","hostname","match","ReactDOM","render","src_App","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.b57de9c6.chunk.js","sourcesContent":["import React from 'react'\r\n\r\nconst FilterNotes = ({ filter, handleInputChange }) => {\r\n  return (\r\n    <div className='d-none'>\r\n      <input\r\n        placeholder='Filter notes'\r\n        value={ filter }\r\n        name='filter'\r\n        onChange={ handleInputChange(null) }\r\n      />\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default FilterNotes","import React from 'react'\r\n\r\nconst LoginForm = ({\r\n  login,\r\n  username,\r\n  password,\r\n  handleInputChange,\r\n  loginMessage\r\n}) => {\r\n  return (\r\n    <form onSubmit={ login }>\r\n      <span>\r\n        { loginMessage }\r\n      </span>\r\n      <input\r\n        type='text'\r\n        placeholder='Username'\r\n        name='username'\r\n        value={ username }\r\n        onChange={ handleInputChange(null) }\r\n      />\r\n      <input\r\n        type='password'\r\n        placeholder='Password'\r\n        name='password'\r\n        value={ password }\r\n        onChange={ handleInputChange(null) }\r\n      />\r\n      <button type='submit'>Login</button>\r\n    </form>\r\n  )\r\n}\r\n\r\nexport default LoginForm","import React from 'react'\r\n\r\nconst LogoutForm = ({\r\n  user,\r\n  logout\r\n}) => {\r\n  return (\r\n    <form onSubmit={ logout }>\r\n      <button type=\"submit\">\r\n        Logout&nbsp;\r\n        { user.username }\r\n      </button>\r\n    </form>\r\n  )\r\n}\r\n\r\nexport default LogoutForm","import React from 'react'\r\nimport FilterNotes from './FilterNotes.js'\r\nimport LoginForm from './LoginForm.js'\r\nimport LogoutForm from './LogoutForm.js'\r\n\r\nconst Navbar = ({\r\n  title,\r\n  login,\r\n  logout,\r\n  newNote,\r\n  filterValue,\r\n  handleInputChange,\r\n  username,\r\n  password,\r\n  user,\r\n  loginMessage\r\n}) => {\r\n  return (\r\n    <nav>\r\n      <h1>\r\n        { title }\r\n      </h1>\r\n      <FilterNotes\r\n        filterValue={ filterValue }\r\n        handleInputChange={ handleInputChange }\r\n      />\r\n      <button onClick={ newNote } type='button'>\r\n        New note\r\n      </button>\r\n      {\r\n        user === null &&\r\n        <LoginForm\r\n          login={ login }\r\n          username={ username }\r\n          password={ password }\r\n          handleInputChange={ handleInputChange }\r\n          loginMessage={ loginMessage }\r\n        />\r\n      }\r\n      {\r\n        user !== null &&\r\n        <LogoutForm\r\n          logout={ logout }\r\n          user={ user }\r\n        />\r\n      }\r\n\r\n    </nav>\r\n  )\r\n}\r\n\r\nexport default Navbar","import React from 'react'\n\nconst Notification = ({ message }) => {\n  if (message === null) {\n    return null\n  }\n  return (\n    <div className=\"notification\">\n      { message }\n    </div>\n  )\n}\n\nexport default Notification","import React from 'react'\r\nimport Moment from 'react-moment'\r\n\r\nconst Date = ({ date }) => {\r\n  if (date === null) {\r\n    return null\r\n  }\r\n  return (\r\n    <Moment date={ date } />\r\n  )\r\n}\r\n\r\nexport default Date","import React from 'react'\r\n\r\nconst Delete = ({\r\n  note,\r\n  user,\r\n  handleRemove,\r\n}) => {\r\n  if (note.user === 0 || user && note.user === user.id) {\r\n    return (\r\n      <button type='button' onClick={ handleRemove(note) }>\r\n        Delete\r\n      </button>\r\n    )\r\n  } else {\r\n    return null\r\n  }\r\n}\r\n\r\nexport default Delete","import React from 'react'\r\nimport TextareaAutosize from 'react-autosize-textarea'\r\nimport Draggable from 'react-draggable'\r\nimport Notification from './Notification'\r\nimport Date from './Date'\r\nimport Delete from './Delete'\r\n\r\nconst Note = ({\r\n  note,\r\n  user,\r\n  handleRemove,\r\n  handleDrag,\r\n  saveNote,\r\n  handleInputChange,\r\n}) => {\r\n  return (\r\n    <Draggable\r\n      cancel='.note form>*'\r\n      position={ note.position }\r\n      bounds='parent'\r\n      onStop={ saveNote(note) }\r\n      onDrag={ handleDrag(note) }\r\n    >\r\n      <div className='note'>\r\n        <Notification message={ note.notification } />\r\n        <form onSubmit={ saveNote(note) }>\r\n          <h3>\r\n            <TextareaAutosize\r\n              onBlur={ saveNote(note) }\r\n              onResize={(e) => {}}\r\n              value={ note.title }\r\n              name=\"title\"\r\n              placeholder='Title'\r\n              onChange={ handleInputChange(note) }\r\n            />\r\n            <span className='border'></span>\r\n          </h3>\r\n          <Date date={ note.date } />\r\n          <p>\r\n            <TextareaAutosize\r\n              onBlur={ saveNote(note) }\r\n              onResize={(e) => {}}\r\n              value={ note.content }\r\n              name=\"content\"\r\n              placeholder='Add text here'\r\n              onChange={ handleInputChange(note) }\r\n            />\r\n            <span className='border'></span>\r\n          </p>\r\n          <Delete user={ user } note={ note } handleRemove={ handleRemove } />\r\n        </form>\r\n      </div>\r\n    </Draggable>\r\n  )\r\n}\r\n\r\nexport default Note","import React from 'react'\r\nimport Note from './Note'\r\n\r\nconst Notes = ({\r\n  notes,\r\n  user,\r\n  handleRemove,\r\n  handleDrag,\r\n  saveNote,\r\n  handleInputChange\r\n}) => {\r\n  return (\r\n    <div id='notes'>\r\n      { notes.map(note =>\r\n        <Note\r\n          key={ note.id }\r\n          note={ note }\r\n          user={ user }\r\n          handleRemove={ handleRemove }\r\n          handleDrag={ handleDrag }\r\n          saveNote={ saveNote }\r\n          handleInputChange={ handleInputChange }\r\n        />\r\n      ) }\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Notes","import axios from 'axios'\r\nconst baseUrl = '/notes'\r\n\r\nlet token = null\r\n\r\nconst setToken = (newToken) => {\r\n  token = `bearer ${newToken}`\r\n}\r\n\r\nconst removeToken = () => {\r\n  token = null\r\n}\r\n\r\nconst getAll = async () => {\r\n  const response = await axios.get(baseUrl)\r\n  return response.data\r\n}\r\n\r\nconst create = async (note) => {\r\n  const config = { headers: { 'Authorization': token } }\r\n  const response = await axios.post(baseUrl, note, config)\r\n  return response.data\r\n}\r\n\r\nconst update = async (note) => {\r\n  const config = { headers: { 'Authorization': token } }  \r\n  const response = await axios.put(`${baseUrl}/${note.id}`, note, config)\r\n  return response.data\r\n}\r\n\r\nconst remove = async (note) => {\r\n  const config = { headers: { 'Authorization': token } }  \r\n  const response = await axios.delete(`${baseUrl}/${note.id}`, config)\r\n  return response.data\r\n}\r\n\r\nexport default { setToken, removeToken, getAll, create, update, remove }","import axios from 'axios'\r\nconst baseUrl = '/login'\r\n\r\nconst login = async (credentials) => {\r\n  const response = await axios.post(baseUrl, credentials)\r\n  return response.data\r\n}\r\n\r\nexport default { login }","import React, { Component } from 'react'\r\nimport Navbar from './components/Navbar.js'\r\nimport Notes from './components/Notes.js'\r\nimport noteService from './services/notes.js'\r\nimport loginService from './services/login.js'\r\nimport update from 'immutability-helper'\r\nimport ReactGA from 'react-ga'\r\n\r\nclass App extends Component {\r\n  constructor(props) {\r\n    super(props)\r\n    this.state = {\r\n      notes: [],\r\n      filter: '',\r\n      username: '',\r\n      password: '',\r\n      user: null,\r\n      loginMessage: null\r\n    }\r\n  }\r\n\r\n  // set notification to null after timeout\r\n  hideNotification = (note) => {\r\n    const timeout = 3000\r\n    setTimeout(() => {\r\n      const index = this.state.notes.findIndex(n => n.id === note.id)\r\n      // if note not found, index will be -1\r\n      if (index >= 0) {\r\n        const notes = update(this.state.notes, {\r\n          [index]: { ['notification']: { $set: null } }\r\n        })\r\n        this.setState({ notes: notes })\r\n      }\r\n    }, timeout)\r\n  }\r\n\r\n  componentDidMount() {\r\n    document.title = 'NoteOwl'\r\n\r\n    // load notes\r\n    noteService\r\n      .getAll()\r\n      .then(notes => { this.setState({ notes: notes }) })\r\n    \r\n    // sve user to local storage\r\n    const loggedUserJSON = window.localStorage.getItem('user')\r\n    if (loggedUserJSON) {\r\n      const user = JSON.parse(loggedUserJSON)\r\n      this.setState({ user: user })\r\n      noteService.setToken(user.token)\r\n    }\r\n\r\n    // initialize GA\r\n    ReactGA.initialize('UA-120584024-4')\r\n    ReactGA.pageview('/')\r\n  }\r\n\r\n  logout = async (event) => {\r\n    event.preventDefault()\r\n    \r\n    try {\r\n      noteService.removeToken(this.state.user.token)\r\n      window.localStorage.removeItem('user')\r\n      this.setState({ user: null })\r\n    } catch (exception) {\r\n      this.setState({ user: null })\r\n    }\r\n  }\r\n\r\n  login = async (event) => {\r\n    event.preventDefault()\r\n\r\n    try {\r\n      const user = await loginService.login({\r\n        username: this.state.username,\r\n        password: this.state.password\r\n      })\r\n\r\n      window.localStorage.setItem('user', JSON.stringify(user))\r\n      noteService.setToken(user.token)\r\n\r\n      this.setState({ user: user, username: '', password: ''})\r\n    } catch (exception) {\r\n      this.setState({ loginMessage: 'Username and/or password incorrect' })\r\n      setTimeout(() => {\r\n        this.setState({ loginMessage: null })\r\n      }, 3000)\r\n    }\r\n  }\r\n\r\n  newNote = () => {\r\n    if (!this.state.notes.find(n => n.id === 0)) {\r\n      const note = {\r\n        id: 0,\r\n        title: '',\r\n        content: '',\r\n        created: null,\r\n        updated: null,\r\n        important: false,\r\n        notification: null,\r\n        position: {\r\n          x: 0,\r\n          y: 0\r\n        },\r\n        user: 0\r\n      }\r\n      this.setState({ notes: this.state.notes.concat(note) })\r\n    }\r\n  }\r\n\r\n  saveNote = (note) => () => {\r\n    if (this.state.user) {\r\n      if (note.title && note.content) {\r\n        if (note.id === 0) {\r\n          noteService\r\n            .create(note)\r\n            .then(createdNote => {\r\n              createdNote.notification = 'Note saved'\r\n              const notes = this.state.notes.filter(n => n.id !== 0)\r\n              this.setState({ notes: notes.concat(createdNote) })\r\n              this.hideNotification(createdNote)\r\n            })\r\n            .catch(error => { console.log(error) })\r\n        } else {\r\n          noteService\r\n            .update(note)\r\n            .then(updatedNote => {\r\n              updatedNote.notification = 'Note saved'\r\n              const notes = this.state.notes.filter(n => n.id !== updatedNote.id)\r\n              this.setState({ notes: notes.concat(updatedNote) })\r\n              this.hideNotification(updatedNote)\r\n            })\r\n            .catch(error => { console.log(error) })\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  handleRemove = (note) => () => {\r\n    if (!note.author) {\r\n      if (window.confirm('Are you sure you want to remove this note?')) {\r\n        if (note.id === 0) {\r\n          const notes = this.state.notes.filter(n => n.id !== note.id)\r\n          this.setState({ notes: notes })          \r\n        } else {\r\n          noteService\r\n            .remove(note)\r\n            .then(response => {\r\n              const notes = this.state.notes.filter(n => n.id !== note.id)\r\n              this.setState({ notes: notes })\r\n            })\r\n            .catch(error => {\r\n              console.log(error)\r\n              const notes = this.state.notes.filter(n => n.id !== note.id)\r\n              this.setState({ notes: notes })\r\n            })\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  handleDrag = (note) => (event, ui) => {\r\n    const notes = this.state.notes.filter(n => n.id !== note.id)\r\n    if (!note.position) {\r\n      note.position = {\r\n        x: 0,\r\n        y: 0\r\n      }\r\n    }\r\n    note.position = {\r\n      x: +note.position.x + +ui.deltaX.toFixed(0),\r\n      y: +note.position.y + +ui.deltaY.toFixed(0)\r\n    }\r\n    this.setState({ notes: notes.concat(note) })\r\n  }\r\n\r\n  handleInputChange = (note) => {\r\n    return (event) => {\r\n      const value = event.target.value\r\n      const name = event.target.name\r\n      if (note) {\r\n        const index = this.state.notes.findIndex(n => n.id === note.id)\r\n        const notes = update(this.state.notes, {\r\n          [index]: { [name]: { $set: value } }\r\n        })\r\n        this.setState({ notes: notes })\r\n      } else {\r\n        this.setState({ [name]: value })\r\n      }\r\n    }\r\n  }\r\n\r\n  render() {\r\n    const notes = this.state.notes.filter(note =>\r\n      note.title.toLowerCase().includes(this.state.filter.toLowerCase()) ||\r\n      note.content.toLowerCase().includes(this.state.filter.toLowerCase())\r\n    )\r\n    return (\r\n      <div id='content'>\r\n        <Navbar\r\n          title=\"Noteowl\"\r\n          login={ this.login }\r\n          logout={ this.logout }\r\n          newNote={ this.newNote }\r\n          handleInputChange={ this.handleInputChange }\r\n          filter={ this.state.filter }\r\n          username={ this.state.username }\r\n          password={ this.state.password }\r\n          user={ this.state.user }\r\n          loginMessage={ this.state.loginMessage }\r\n        /> \r\n        <Notes\r\n          notes={ notes }\r\n          handleRemove={ this.handleRemove }\r\n          handleDrag={ this.handleDrag }\r\n          saveNote={ this.saveNote }\r\n          user={ this.state.user }\r\n          handleInputChange={ this.handleInputChange }\r\n        />\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default App","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n)\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href)\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets see https://github.com/facebook/create-react-app/issues/2374\n      return\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config)\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          )\n        })\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config)\n      }\n    })\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing\n        if (installingWorker === null) {\n          return\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              )\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration)\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.')\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration)\n              }\n            }\n          }\n        }\n      }\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error)\n    })\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type')\n      if (\n        response.status === 404 ||\n        (contentType !== null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload()\n          })\n        })\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config)\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      )\n    })\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister()\n    })\n  }\n}\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport './index.css'\nimport App from './App'\nimport * as serviceWorker from './serviceWorker'\n\nReactDOM.render(<App />, document.getElementById('root'))\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister()"],"sourceRoot":""}