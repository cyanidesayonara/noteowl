{"version":3,"sources":["components/Logo.jsx","components/FilterNotes.jsx","components/LoginMessage.jsx","components/LoginField.jsx","components/LoginForm.jsx","components/LogoutForm.jsx","components/Navbar.jsx","components/Notification.jsx","components/NoteDate.jsx","components/Delete.jsx","components/ColorChanger.jsx","components/NoteControls.jsx","components/Note.jsx","components/Notes.jsx","services/notes.js","services/login.js","App.jsx","serviceWorker.js","index.jsx"],"names":["Logo","react_default","a","createElement","id","FilterNotes","_ref","filter","handleInputChange","className","placeholder","value","name","onChange","LoginMessage","loginMessage","LoginField","type","LoginForm","login","username","password","components_LoginMessage","onSubmit","components_LoginField","LogoutForm","user","logout","Navbar","filterValue","components_Logo","components_FilterNotes","components_LoginForm","components_LogoutForm","Notification","message","NoteDate","text","date","dist_default","format","Delete","note","handleRemove","onClick","ColorChanger","colors","map","color","checked","NoteControls","components_Delete","components_ColorChanger","Note","handleDrag","index","divStyle","zIndex","react_draggable_default","cancel","position","bounds","onDrag","style","components_Notification","notification","lib_default","onResize","e","title","components_NoteDate","created","updated","content","components_NoteControls","Notes","notes","saveNote","newNote","components_Note","key","baseUrl","token","services_notes","setToken","newToken","concat","removeToken","getAll","Object","asyncToGenerator","regenerator_default","mark","_callee","config","response","wrap","_context","prev","next","headers","Authorization","axios","get","sent","abrupt","data","stop","apply","this","arguments","create","_ref2","_callee2","_context2","post","_x","update","_ref3","_callee3","_context3","put","_x2","remove","_ref4","_callee4","_context4","delete","_x3","services_login","credentials","App","props","_useState","useState","_useState2","slicedToArray","setNotes","_useState3","_useState4","setUser","_useState5","_useState6","_useState7","_useState8","setUsername","_useState9","_useState10","setPassword","_useState11","_useState12","setLoginMessage","useEffect","console","log","document","loggedUserJSON","window","localStorage","getItem","loggedUser","JSON","parse","noteService","then","ReactGA","initialize","pageview","hideNotification","setTimeout","findIndex","n","updatedNotes","defineProperty","$set","event","preventDefault","removeItem","exception","_user","loginService","setItem","stringify","modified","t0","clearTimeout","saveTimeout","createdNote","catch","error","updatedNote","target","_index3","shownNotes","toLowerCase","includes","components_Navbar","components_Notes","find","Date","important","x","y","author","confirm","filteredNotes","ui","_index2","deltaX","toFixed","deltaY","Boolean","location","hostname","match","ReactDOM","render","src_App","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.af079c51.chunk.js","sourcesContent":["import React from 'react'\n\nconst Logo = () => {\n  return (\n    <div id='logo'>\n      <span>\n        <strong>\n          NoteOwl\n        </strong>\n      </span>\n      <br />\n      <span>\n        Logo\n      </span>\n      <br />\n      <span>\n        Pending\n      </span>\n    </div>\n  )\n}\n\nexport default Logo","import React from 'react'\n\nconst FilterNotes = ({ filter, handleInputChange }) => {\n  return (\n    <div className=\"d-none\">\n      <input\n        placeholder=\"Filter notes\"\n        value={filter}\n        name=\"filter\"\n        onChange={handleInputChange(null)}\n      />\n    </div>\n  )\n}\n\nexport default FilterNotes\n","import React from 'react'\n\nconst LoginMessage = ({\n  loginMessage,\n}) => {\n  if (loginMessage) {\n    return (\n      <div>\n        <p>\n          { loginMessage }\n        </p>\n      </div>\n    )\n  } else {\n    return null\n  }\n}\n\nexport default LoginMessage","import React from 'react'\n\nconst LoginField = ({ type, placeholder, name, value, handleInputChange }) => {\n  return (\n    <div className=\"owl-field\">\n      <input\n        type={type}\n        placeholder={placeholder}\n        name={name}\n        value={value}\n        onChange={handleInputChange(null)}\n      />\n      <span className=\"border\" />\n    </div>\n  )\n}\n\nexport default LoginField\n","import React from 'react'\nimport LoginMessage from './LoginMessage'\nimport LoginField from './LoginField'\n\nconst LoginForm = ({\n  login,\n  username,\n  password,\n  handleInputChange,\n  loginMessage\n}) => {\n  return (\n    <div id='login'>\n      <LoginMessage loginMessage={ loginMessage } />\n      <form onSubmit={ login }>\n        <div>\n          <LoginField\n            type='text'\n            placeholder='Username'\n            name='username'\n            value={ username }\n            handleInputChange ={ handleInputChange }\n          />\n          <LoginField\n            type='password'\n            placeholder='Password'\n            name='password'\n            value={ password }\n            handleInputChange ={ handleInputChange }\n          />\n        </div>\n        <button type='submit'>Login</button>\n      </form>\n    </div>\n  )\n}\n\nexport default LoginForm","import React from 'react'\n\nconst LogoutForm = ({\n  user,\n  logout\n}) => {\n  return (\n    <div id='logout'>\n      <form onSubmit={ logout }>\n        <div>\n          <span>\n            Signed in as\n          </span>\n          <br />\n          <span>\n            { user.username }\n          </span>\n        </div>\n        <button type=\"submit\">\n          Logout\n        </button>\n      </form>\n    </div>\n  )\n}\n\nexport default LogoutForm","import React from 'react'\nimport Logo from './Logo.jsx'\nimport FilterNotes from './FilterNotes'\nimport LoginForm from './LoginForm'\nimport LogoutForm from './LogoutForm'\n\nconst Navbar = ({\n  login,\n  logout,\n  filterValue,\n  handleInputChange,\n  username,\n  password,\n  user,\n  loginMessage,\n}) => {\n  return (\n    <nav id='navbar'>\n      <Logo />\n      <FilterNotes\n        filterValue={ filterValue }\n        handleInputChange={ handleInputChange }\n      />\n      {\n        user === null &&\n        <LoginForm\n          login={ login }\n          username={ username }\n          password={ password }\n          handleInputChange={ handleInputChange }\n          loginMessage={ loginMessage }\n        />\n      }\n      {\n        user !== null &&\n        <LogoutForm\n          logout={ logout }\n          user={ user }\n        />\n      }\n\n    </nav>\n  )\n}\n\nexport default Navbar","import React from 'react'\n\nconst Notification = ({ message }) => {\n  if (message === null) {\n    return null\n  }\n  return (\n    <div className=\"notification\">\n      { message }\n    </div>\n  )\n}\n\nexport default Notification","import React from 'react'\nimport Moment from 'react-moment'\n\nconst NoteDate = ({ text, date }) => {\n  return (\n    <div className='note-date'>\n      <span>{ text }</span>\n      {\n        date === null &&\n        <span>Never</span>\n      }\n      {\n        date !== null &&\n        <Moment format='ddd DD MMM YYYY HH:mm'>{ date }</Moment>\n      }\n    </div>\n  )\n}\n\nexport default NoteDate","import React from 'react'\n\nconst Delete = ({ note, user, handleRemove }) => {\n  if ((user && note.user === user.id) || note.user === null) {\n    return (\n      <button type=\"button\" onClick={handleRemove(note)}>\n        Delete\n      </button>\n    )\n  } else {\n    return null\n  }\n}\n\nexport default Delete\n","import React from 'react'\n\nconst ColorChanger = ({ colors, note, handleInputChange }) => {\n  return (\n    <div className=\"color-changer\">\n      {colors.map(color => {\n        let checked = false\n        if (note.color === color) {\n          checked = true\n        }\n        return (\n          <label className={'color-input color-' + color}>\n            <input\n              name=\"color\"\n              value={color}\n              type=\"checkbox\"\n              checked={checked}\n              onChange={handleInputChange(note)}\n            />\n            <span className=\"checkmark\" />\n          </label>\n        )\n      })}\n    </div>\n  )\n}\n\nexport default ColorChanger\n","import React from 'react'\nimport Delete from './Delete'\nimport ColorChanger from './ColorChanger'\n\nconst NoteControls = ({\n  user,\n  note,\n  handleRemove,\n  handleInputChange,\n  colors,\n}) => {\n  return (\n    <div className='note-controls'>\n      <Delete\n        note={ note }\n        user={ user }\n        handleRemove={ handleRemove }\n      />\n      <ColorChanger\n        note={ note } \n        handleInputChange={ handleInputChange }\n        colors={ colors }\n      />\n    </div>\n  )\n}\n\nexport default NoteControls","import React from 'react'\nimport TextareaAutosize from 'react-autosize-textarea'\nimport Draggable from 'react-draggable'\nimport Notification from './Notification'\nimport NoteDate from './NoteDate'\nimport NoteControls from './NoteControls'\n\nconst Note = ({\n  note,\n  user,\n  handleRemove,\n  handleDrag,\n  handleInputChange,\n  index,\n  colors,\n}) => {\n  const zIndex = 8000 + index\n  const divStyle = {\n    zIndex: zIndex,\n  }\n  return (\n    <Draggable\n      cancel='.note form>*'\n      position={ note.position }\n      bounds='parent'\n      onDrag={ handleDrag(note) }\n    >\n      <div\n        className={ 'note color-' + note.color }\n        style={ divStyle }\n      >\n        <Notification message={ note.notification } />\n        <form>\n          <div className='owl-field'>\n            <TextareaAutosize\n              onResize={(e) => {}}\n              value={ note.title }\n              name='title'\n              placeholder='Title'\n              onChange={ handleInputChange(note) }\n            />\n            <span className='border'></span>\n          </div>\n          <NoteDate text='Created: ' date={ note.created } />\n          <NoteDate text='Saved: ' date={ note.updated } />\n          <div className='owl-field'>\n            <TextareaAutosize\n              onResize={(e) => {}}\n              value={ note.content }\n              name='content'\n              placeholder='Add text here'\n              onChange={ handleInputChange(note) }\n            />\n            <span className='border'></span>\n          </div>\n          <NoteControls\n            user={ user }\n            note={ note }\n            handleRemove={ handleRemove }\n            colors={ colors }\n            handleInputChange={ handleInputChange }\n          />\n        </form>\n      </div>\n    </Draggable>\n  )\n}\n\nexport default Note","import React from 'react'\nimport Note from './Note'\n\nconst Notes = ({\n  notes,\n  user,\n  handleRemove,\n  handleDrag,\n  saveNote,\n  handleInputChange,\n  newNote\n}) => {\n  const colors = ['yellow', 'blue', 'red', 'green']\n  return (\n    <div id=\"notes\">\n      <button onClick={newNote} type=\"button\">\n        New note\n      </button>\n      {notes &&\n        notes.map((note, index) => (\n          <Note\n            key={note.id}\n            note={note}\n            user={user}\n            handleRemove={handleRemove}\n            handleDrag={handleDrag}\n            saveNote={saveNote}\n            handleInputChange={handleInputChange}\n            index={index}\n            colors={colors}\n          />\n        ))}\n    </div>\n  )\n}\n\nexport default Notes\n","import axios from 'axios'\n\nconst baseUrl = '/api/notes/'\n\nlet token = null\n\nconst setToken = newToken => {\n  token = `bearer ${newToken}`\n}\n\nconst removeToken = () => {\n  token = null\n}\n\nconst getAll = async () => {\n  const config = {\n    headers: {\n      Authorization: token\n    }\n  }\n  const response = await axios.get(baseUrl, config)\n  return response.data\n}\n\nconst create = async note => {\n  const config = {\n    headers: {\n      Authorization: token\n    }\n  }\n  const response = await axios.post(baseUrl, note, config)\n  return response.data\n}\n\nconst update = async note => {\n  const config = {\n    headers: {\n      Authorization: token\n    }\n  }\n  const response = await axios.put(`${baseUrl}${note.id}`, note, config)\n  return response.data\n}\n\nconst remove = async note => {\n  const config = {\n    headers: {\n      Authorization: token\n    }\n  }\n  const response = await axios.delete(`${baseUrl}${note.id}`, config)\n  return response.data\n}\n\nexport default {\n  setToken,\n  removeToken,\n  getAll,\n  create,\n  update,\n  remove\n}","import axios from 'axios'\r\nconst baseUrl = '/api/login/'\r\n\r\nconst login = async (credentials) => {\r\n  const response = await axios.post(baseUrl, credentials)\r\n  return response.data\r\n}\r\n\r\nexport default {\r\n  login\r\n}","import React, { useState, useEffect } from 'react'\r\nimport Navbar from './components/Navbar'\r\nimport Notes from './components/Notes'\r\nimport noteService from './services/notes'\r\nimport loginService from './services/login'\r\nimport update from 'immutability-helper'\r\nimport ReactGA from 'react-ga'\r\n\r\nconst App = props => {\r\n  const [notes, setNotes] = useState(props.notes)\r\n  const [user, setUser] = useState(null)\r\n  const [filter, setFilter] = useState('')\r\n  const [username, setUsername] = useState('')\r\n  const [password, setPassword] = useState('')\r\n  const [loginMessage, setLoginMessage] = useState('')\r\n\r\n  useEffect(() => {\r\n    console.log('Using effect')\r\n    document.title = 'NoteOwl'\r\n    // save user to local storage\r\n    const loggedUserJSON = window.localStorage.getItem('user')\r\n    if (loggedUserJSON) {\r\n      const loggedUser = JSON.parse(loggedUserJSON)\r\n      setUser(loggedUser)\r\n      noteService.setToken(loggedUser.token)\r\n    }\r\n    noteService.getAll().then(notes => {\r\n      setNotes(notes)\r\n    })\r\n    // initialize GA\r\n    ReactGA.initialize('UA-120584024-4')\r\n    ReactGA.pageview('/')\r\n  }, [])\r\n\r\n  // set notification to null after timeout\r\n  const hideNotification = note => {\r\n    setTimeout(() => {\r\n      const index = notes.findIndex(n => n.id === note.id)\r\n      // index is -1 if note not in notes\r\n      if (index > -1) {\r\n        const updatedNotes = update(notes, {\r\n          [index]: {\r\n            ['notification']: {\r\n              $set: null\r\n            }\r\n          }\r\n        })\r\n        setNotes(updatedNotes)\r\n      }\r\n    }, 3000)\r\n  }\r\n\r\n  const logout = async event => {\r\n    event.preventDefault()\r\n\r\n    try {\r\n      noteService.removeToken(user.token)\r\n      window.localStorage.removeItem('user')\r\n      setUser(null)\r\n      noteService.getAll().then(notes => setNotes(notes))\r\n    } catch (exception) {\r\n      setUser(null)\r\n    }\r\n  }\r\n\r\n  const login = async event => {\r\n    event.preventDefault()\r\n\r\n    try {\r\n      const user = await loginService.login({\r\n        username: username,\r\n        password: password\r\n      })\r\n\r\n      window.localStorage.setItem('user', JSON.stringify(user))\r\n      noteService.setToken(user.token)\r\n\r\n      setUser(user)\r\n      setUsername('')\r\n      setPassword('')\r\n      // if notes are unsaved\r\n      notes.map(note => (note.modified === true ? saveNote(note) : null))\r\n    } catch (exception) {\r\n      setLoginMessage('Username and/or password incorrect')\r\n      setPassword('')\r\n      setTimeout(() => setLoginMessage(''), 3000)\r\n    }\r\n  }\r\n\r\n  const newNote = () => {\r\n    if (!notes.find(n => n.id === null)) {\r\n      const note = {\r\n        id: null,\r\n        title: '',\r\n        content: '',\r\n        created: new Date(),\r\n        updated: null,\r\n        important: false,\r\n        notification: null,\r\n        position: {\r\n          x: 0,\r\n          y: 0\r\n        },\r\n        user: null,\r\n        color: 'yellow'\r\n      }\r\n      setNotes(notes.concat(note))\r\n    }\r\n  }\r\n\r\n  const saveNote = note => {\r\n    if (note.title && note.content) {\r\n      clearTimeout(note.saveTimeout)\r\n      note.saveTimeout = setTimeout(() => {\r\n        if (user) {\r\n          if (note.id === null) {\r\n            noteService\r\n              .create(note)\r\n              .then(createdNote => {\r\n                createdNote.notification = 'Note saved'\r\n                const index = notes.findIndex(n => n.id === null)\r\n                const updatedNotes = update(notes, {\r\n                  [index]: {\r\n                    $set: createdNote\r\n                  }\r\n                })\r\n                setNotes(updatedNotes)\r\n                hideNotification(createdNote)\r\n              })\r\n              .catch(error => console.log(error))\r\n          } else {\r\n            noteService\r\n              .update(note)\r\n              .then(updatedNote => {\r\n                updatedNote.notification = 'Note saved'\r\n                const index = notes.findIndex(n => n.id === updatedNote.id)\r\n                const updatedNotes = update(notes, {\r\n                  [index]: {\r\n                    $set: updatedNote\r\n                  }\r\n                })\r\n                setNotes(updatedNotes)\r\n                hideNotification(updatedNote)\r\n              })\r\n              .catch(error => console.log(error))\r\n          }\r\n        } else {\r\n          note.notification = 'Login to save note'\r\n          const index = notes.findIndex(n => n.id === note.id)\r\n          const updatedNotes = update(notes, {\r\n            [index]: {\r\n              $set: note\r\n            }\r\n          })\r\n          setNotes(updatedNotes)\r\n          hideNotification(note)\r\n        }\r\n      }, 3000)\r\n    }\r\n  }\r\n\r\n  const handleRemove = note => () => {\r\n    if (!note.author) {\r\n      if (window.confirm('Are you sure you want to remove this note?')) {\r\n        if (note.id === null) {\r\n          const filteredNotes = notes.filter(n => n.id !== note.id)\r\n          setNotes(filteredNotes)\r\n        } else {\r\n          noteService\r\n            .remove(note)\r\n            .then(response => {\r\n              const filteredNotes = notes.filter(n => n.id !== note.id)\r\n              setNotes(filteredNotes)\r\n            })\r\n            .catch(error => {\r\n              const filteredNotes = notes.filter(n => n.id !== note.id)\r\n              setNotes(filteredNotes)\r\n            })\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  const handleDrag = note => (event, ui) => {\r\n    const position = {\r\n      x: +note.position.x + +ui.deltaX.toFixed(0),\r\n      y: +note.position.y + +ui.deltaY.toFixed(0)\r\n    }\r\n    const index = notes.findIndex(n => n.id === note.id)\r\n    const updatedNotes = update(notes, {\r\n      [index]: {\r\n        ['modified']: {\r\n          $set: true\r\n        },\r\n        ['position']: {\r\n          $set: position\r\n        }\r\n      }\r\n    })\r\n    setNotes(updatedNotes)\r\n    saveNote(notes[index])\r\n  }\r\n\r\n  const handleInputChange = note => event => {\r\n    const value = event.target.value\r\n    const name = event.target.name\r\n    if (note) {\r\n      const index = notes.findIndex(n => n.id === note.id)\r\n      const updatedNotes = update(notes, {\r\n        [index]: {\r\n          ['modified']: {\r\n            $set: true\r\n          },\r\n          [name]: {\r\n            $set: value\r\n          }\r\n        }\r\n      })\r\n      setNotes(updatedNotes)\r\n      saveNote(notes[index])\r\n    } else {\r\n      console.log('uh oh')\r\n    }\r\n  }\r\n\r\n  const shownNotes = notes\r\n    ? notes.filter(note => {\r\n        console.log(note.title.toLowerCase().includes(filter.toLowerCase()))\r\n        note.title.toLowerCase().includes(filter.toLowerCase()) ||\r\n          note.content.toLowerCase().includes(filter.toLowerCase())\r\n        return note\r\n      })\r\n    : []\r\n\r\n  return (\r\n    <div id=\"content\">\r\n      <Navbar\r\n        login={login}\r\n        logout={logout}\r\n        handleInputChange={handleInputChange}\r\n        filter={filter}\r\n        username={username}\r\n        password={password}\r\n        user={user}\r\n        loginMessage={loginMessage}\r\n      />\r\n      <Notes\r\n        notes={shownNotes}\r\n        newNote={newNote}\r\n        handleRemove={handleRemove}\r\n        handleDrag={handleDrag}\r\n        user={user}\r\n        handleInputChange={handleInputChange}\r\n      />\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default App\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n)\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href)\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets see https://github.com/facebook/create-react-app/issues/2374\n      return\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config)\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          )\n        })\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config)\n      }\n    })\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing\n        if (installingWorker === null) {\n          return\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              )\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration)\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.')\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration)\n              }\n            }\n          }\n        }\n      }\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error)\n    })\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type')\n      if (\n        response.status === 404 ||\n        (contentType !== null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload()\n          })\n        })\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config)\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      )\n    })\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister()\n    })\n  }\n}\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport './index.css'\nimport App from './App'\nimport * as serviceWorker from './serviceWorker'\n\nReactDOM.render(<App />, document.getElementById('root'))\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister()\n"],"sourceRoot":""}