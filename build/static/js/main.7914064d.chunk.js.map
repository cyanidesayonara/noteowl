{"version":3,"sources":["components/Logo.jsx","components/FilterNotes.jsx","components/LoginMessage.jsx","components/LoginField.jsx","components/LoginForm.jsx","components/LogoutForm.jsx","components/Navbar.jsx","components/Notification.jsx","components/NoteDate.jsx","components/Delete.jsx","components/ColorChanger.jsx","components/NoteControls.jsx","components/Note.jsx","components/Notes.jsx","services/notes.js","services/login.js","App.jsx","serviceWorker.js","index.jsx"],"names":["Logo","react_default","a","createElement","id","FilterNotes","_ref","filter","handleInputChange","className","placeholder","value","name","onChange","LoginMessage","loginMessage","LoginField","type","LoginForm","login","username","password","components_LoginMessage","onSubmit","components_LoginField","LogoutForm","user","logout","Navbar","filterValue","components_Logo","components_FilterNotes","components_LoginForm","components_LogoutForm","Notification","message","NoteDate","text","date","dist_default","format","Delete","note","handleRemove","onClick","ColorChanger","colors","map","color","checked","NoteControls","components_Delete","components_ColorChanger","Note","handleDrag","index","divStyle","zIndex","react_draggable_default","cancel","position","bounds","onDrag","style","components_Notification","notification","lib_default","onResize","e","title","components_NoteDate","created","updated","content","components_NoteControls","Notes","notes","saveNote","newNote","components_Note","key","token","services_notes","setToken","newToken","concat","removeToken","getAll","Object","asyncToGenerator","regenerator_default","mark","_callee","config","response","wrap","_context","prev","next","headers","Authorization","axios","get","sent","abrupt","data","stop","apply","this","arguments","create","_ref2","_callee2","_context2","post","_x","update","_ref3","_callee3","_context3","put","_x2","remove","_ref4","_callee4","_context4","delete","_x3","services_login","credentials","App","props","_this","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","hideNotification","setTimeout","state","findIndex","n","defineProperty","$set","setState","event","preventDefault","noteService","window","localStorage","removeItem","then","exception","loginService","setItem","JSON","stringify","modified","t0","find","Date","important","x","y","clearTimeout","saveTimeout","createdNote","catch","error","console","log","updatedNote","author","confirm","ui","_index2","deltaX","toFixed","deltaY","target","_index3","_this2","document","loggedUserJSON","getItem","parse","ReactGA","initialize","pageview","_this3","toLowerCase","includes","components_Navbar","components_Notes","Component","Boolean","location","hostname","match","ReactDOM","render","src_App","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.7914064d.chunk.js","sourcesContent":["import React from 'react'\n\nconst Logo = () => {\n  return (\n    <div id='logo'>\n      <span>\n        <strong>\n          NoteOwl\n        </strong>\n      </span>\n      <br />\n      <span>\n        Logo\n      </span>\n      <br />\n      <span>\n        Pending\n      </span>\n    </div>\n  )\n}\n\nexport default Logo","import React from 'react'\n\nconst FilterNotes = ({ filter, handleInputChange }) => {\n  return (\n    <div className=\"d-none\">\n      <input\n        placeholder=\"Filter notes\"\n        value={filter}\n        name=\"filter\"\n        onChange={handleInputChange(null)}\n      />\n    </div>\n  )\n}\n\nexport default FilterNotes\n","import React from 'react'\n\nconst LoginMessage = ({\n  loginMessage,\n}) => {\n  if (loginMessage) {\n    return (\n      <div>\n        <p>\n          { loginMessage }\n        </p>\n      </div>\n    )\n  } else {\n    return null\n  }\n}\n\nexport default LoginMessage","import React from 'react'\n\nconst LoginField = ({ type, placeholder, name, value, handleInputChange }) => {\n  return (\n    <div className=\"owl-field\">\n      <input\n        type={type}\n        placeholder={placeholder}\n        name={name}\n        value={value}\n        onChange={handleInputChange(null)}\n      />\n      <span className=\"border\" />\n    </div>\n  )\n}\n\nexport default LoginField\n","import React from 'react'\nimport LoginMessage from './LoginMessage'\nimport LoginField from './LoginField'\n\nconst LoginForm = ({\n  login,\n  username,\n  password,\n  handleInputChange,\n  loginMessage\n}) => {\n  return (\n    <div id='login'>\n      <LoginMessage loginMessage={ loginMessage } />\n      <form onSubmit={ login }>\n        <div>\n          <LoginField\n            type='text'\n            placeholder='Username'\n            name='username'\n            value={ username }\n            handleInputChange ={ handleInputChange }\n          />\n          <LoginField\n            type='password'\n            placeholder='Password'\n            name='password'\n            value={ password }\n            handleInputChange ={ handleInputChange }\n          />\n        </div>\n        <button type='submit'>Login</button>\n      </form>\n    </div>\n  )\n}\n\nexport default LoginForm","import React from 'react'\n\nconst LogoutForm = ({\n  user,\n  logout\n}) => {\n  return (\n    <div id='logout'>\n      <form onSubmit={ logout }>\n        <div>\n          <span>\n            Signed in as\n          </span>\n          <br />\n          <span>\n            { user.username }\n          </span>\n        </div>\n        <button type=\"submit\">\n          Logout\n        </button>\n      </form>\n    </div>\n  )\n}\n\nexport default LogoutForm","import React from 'react'\nimport Logo from './Logo.jsx'\nimport FilterNotes from './FilterNotes'\nimport LoginForm from './LoginForm'\nimport LogoutForm from './LogoutForm'\n\nconst Navbar = ({\n  login,\n  logout,\n  filterValue,\n  handleInputChange,\n  username,\n  password,\n  user,\n  loginMessage,\n}) => {\n  return (\n    <nav id='navbar'>\n      <Logo />\n      <FilterNotes\n        filterValue={ filterValue }\n        handleInputChange={ handleInputChange }\n      />\n      {\n        user === null &&\n        <LoginForm\n          login={ login }\n          username={ username }\n          password={ password }\n          handleInputChange={ handleInputChange }\n          loginMessage={ loginMessage }\n        />\n      }\n      {\n        user !== null &&\n        <LogoutForm\n          logout={ logout }\n          user={ user }\n        />\n      }\n\n    </nav>\n  )\n}\n\nexport default Navbar","import React from 'react'\n\nconst Notification = ({ message }) => {\n  if (message === null) {\n    return null\n  }\n  return (\n    <div className=\"notification\">\n      { message }\n    </div>\n  )\n}\n\nexport default Notification","import React from 'react'\nimport Moment from 'react-moment'\n\nconst NoteDate = ({ text, date }) => {\n  return (\n    <div className='note-date'>\n      <span>{ text }</span>\n      {\n        date === null &&\n        <span>Never</span>\n      }\n      {\n        date !== null &&\n        <Moment format='ddd DD MMM YYYY HH:mm'>{ date }</Moment>\n      }\n    </div>\n  )\n}\n\nexport default NoteDate","import React from 'react'\n\nconst Delete = ({ note, user, handleRemove }) => {\n  if ((user && note.user === user.id) || note.user === null) {\n    return (\n      <button type=\"button\" onClick={handleRemove(note)}>\n        Delete\n      </button>\n    )\n  } else {\n    return null\n  }\n}\n\nexport default Delete\n","import React from 'react'\n\nconst ColorChanger = ({\n  colors,\n  note,\n  handleInputChange,\n}) => {\n  return (\n    <div className='color-changer' >\n      {\n        colors.map(color => {\n          let checked = false\n          if (note.color === color) {\n            checked = true\n          }\n          return (\n            <label className={ 'color-input color-' + color }>\n              <input\n                name='color'\n                value={ color }\n                type='checkbox'\n                checked={ checked }\n                onChange={ handleInputChange(note) }\n              />\n              <span className='checkmark'></span>\n            </label>\n          )\n        })\n      }\n    </div>\n  )\n}\n\nexport default ColorChanger","import React from 'react'\nimport Delete from './Delete'\nimport ColorChanger from './ColorChanger'\n\nconst NoteControls = ({\n  user,\n  note,\n  handleRemove,\n  handleInputChange,\n  colors,\n}) => {\n  return (\n    <div className='note-controls'>\n      <Delete\n        note={ note }\n        user={ user }\n        handleRemove={ handleRemove }\n      />\n      <ColorChanger\n        note={ note } \n        handleInputChange={ handleInputChange }\n        colors={ colors }\n      />\n    </div>\n  )\n}\n\nexport default NoteControls","import React from 'react'\nimport TextareaAutosize from 'react-autosize-textarea'\nimport Draggable from 'react-draggable'\nimport Notification from './Notification'\nimport NoteDate from './NoteDate'\nimport NoteControls from './NoteControls'\n\nconst Note = ({\n  note,\n  user,\n  handleRemove,\n  handleDrag,\n  handleInputChange,\n  index,\n  colors,\n}) => {\n  const zIndex = 8000 + index\n  const divStyle = {\n    zIndex: zIndex,\n  }\n  return (\n    <Draggable\n      cancel='.note form>*'\n      position={ note.position }\n      bounds='parent'\n      onDrag={ handleDrag(note) }\n    >\n      <div\n        className={ 'note color-' + note.color }\n        style={ divStyle }\n      >\n        <Notification message={ note.notification } />\n        <form>\n          <div className='owl-field'>\n            <TextareaAutosize\n              onResize={(e) => {}}\n              value={ note.title }\n              name='title'\n              placeholder='Title'\n              onChange={ handleInputChange(note) }\n            />\n            <span className='border'></span>\n          </div>\n          <NoteDate text='Created: ' date={ note.created } />\n          <NoteDate text='Saved: ' date={ note.updated } />\n          <div className='owl-field'>\n            <TextareaAutosize\n              onResize={(e) => {}}\n              value={ note.content }\n              name='content'\n              placeholder='Add text here'\n              onChange={ handleInputChange(note) }\n            />\n            <span className='border'></span>\n          </div>\n          <NoteControls\n            user={ user }\n            note={ note }\n            handleRemove={ handleRemove }\n            colors={ colors }\n            handleInputChange={ handleInputChange }\n          />\n        </form>\n      </div>\n    </Draggable>\n  )\n}\n\nexport default Note","import React from 'react'\nimport Note from './Note'\n\nconst Notes = ({\n  notes,\n  user,\n  handleRemove,\n  handleDrag,\n  saveNote,\n  handleInputChange,\n  newNote\n}) => {\n  const colors = ['yellow', 'blue', 'red', 'green']\n  return (\n    <div id=\"notes\">\n      <button onClick={newNote} type=\"button\">\n        New note\n      </button>\n      {notes.map((note, index) => (\n        <Note\n          key={note.id}\n          note={note}\n          user={user}\n          handleRemove={handleRemove}\n          handleDrag={handleDrag}\n          saveNote={saveNote}\n          handleInputChange={handleInputChange}\n          index={index}\n          colors={colors}\n        />\n      ))}\n    </div>\n  )\n}\n\nexport default Notes\n","import axios from 'axios'\n\nconst baseUrl = '/notes'\n\nlet token = null\n\nconst setToken = newToken => {\n  token = `bearer ${newToken}`\n}\n\nconst removeToken = () => {\n  token = null\n}\n\nconst getAll = async () => {\n  const config = {\n    headers: {\n      Authorization: token\n    }\n  }\n  const response = await axios.get(`${baseUrl}`, config)\n  return response.data\n}\n\nconst create = async note => {\n  const config = {\n    headers: {\n      Authorization: token\n    }\n  }\n  const response = await axios.post(baseUrl, note, config)\n  return response.data\n}\n\nconst update = async note => {\n  const config = {\n    headers: {\n      Authorization: token\n    }\n  }\n  const response = await axios.put(`${baseUrl}/${note.id}`, note, config)\n  return response.data\n}\n\nconst remove = async note => {\n  const config = {\n    headers: {\n      Authorization: token\n    }\n  }\n  const response = await axios.delete(`${baseUrl}/${note.id}`, config)\n  return response.data\n}\n\nexport default {\n  setToken,\n  removeToken,\n  getAll,\n  create,\n  update,\n  remove\n}","import axios from 'axios'\r\nconst baseUrl = '/login'\r\n\r\nconst login = async (credentials) => {\r\n  const response = await axios.post(baseUrl, credentials)\r\n  return response.data\r\n}\r\n\r\nexport default {\r\n  login\r\n}","import React, { Component } from 'react'\r\nimport Navbar from './components/Navbar.jsx'\r\nimport Notes from './components/Notes.jsx'\r\nimport noteService from './services/notes.js'\r\nimport loginService from './services/login.js'\r\nimport update from 'immutability-helper'\r\nimport ReactGA from 'react-ga'\r\n\r\nclass App extends Component {\r\n  constructor(props) {\r\n    super(props)\r\n    this.state = {\r\n      notes: [],\r\n      filter: '',\r\n      username: '',\r\n      password: '',\r\n      user: null,\r\n      loginMessage: null\r\n    }\r\n  }\r\n\r\n  // set notification to null after timeout\r\n  hideNotification = note => {\r\n    setTimeout(() => {\r\n      const index = this.state.notes.findIndex(n => n.id === note.id)\r\n      // index is -1 if note not in notes\r\n      if (index > -1) {\r\n        const notes = update(this.state.notes, {\r\n          [index]: {\r\n            ['notification']: {\r\n              $set: null\r\n            }\r\n          }\r\n        })\r\n        this.setState({\r\n          notes: notes\r\n        })\r\n      }\r\n    }, 3000)\r\n  }\r\n\r\n  componentDidMount() {\r\n    document.title = 'NoteOwl'\r\n    // save user to local storage\r\n    const loggedUserJSON = window.localStorage.getItem('user')\r\n    if (loggedUserJSON) {\r\n      const user = JSON.parse(loggedUserJSON)\r\n      this.setState({\r\n        user: user\r\n      })\r\n      noteService.setToken(user.token)\r\n      noteService.getAll().then(notes =>\r\n        this.setState({\r\n          notes: notes\r\n        })\r\n      )\r\n    }\r\n    // initialize GA\r\n    ReactGA.initialize('UA-120584024-4')\r\n    ReactGA.pageview('/')\r\n  }\r\n\r\n  logout = async event => {\r\n    event.preventDefault()\r\n\r\n    try {\r\n      noteService.removeToken(this.state.user.token)\r\n      window.localStorage.removeItem('user')\r\n      this.setState({\r\n        user: null\r\n      })\r\n      noteService.getAll().then(notes =>\r\n        this.setState({\r\n          notes: notes\r\n        })\r\n      )\r\n    } catch (exception) {\r\n      this.setState({\r\n        user: null\r\n      })\r\n    }\r\n  }\r\n\r\n  login = async event => {\r\n    event.preventDefault()\r\n\r\n    try {\r\n      const user = await loginService.login({\r\n        username: this.state.username,\r\n        password: this.state.password\r\n      })\r\n\r\n      window.localStorage.setItem('user', JSON.stringify(user))\r\n      noteService.setToken(user.token)\r\n\r\n      this.setState({\r\n        user: user,\r\n        username: '',\r\n        password: ''\r\n      })\r\n      // if notes are unsaved\r\n      this.state.notes.map(note =>\r\n        note.modified === true ? this.saveNote(note) : null\r\n      )\r\n    } catch (exception) {\r\n      this.setState({\r\n        loginMessage: 'Username and/or password incorrect',\r\n        password: ''\r\n      })\r\n      setTimeout(\r\n        () =>\r\n          this.setState({\r\n            loginMessage: null\r\n          }),\r\n        3000\r\n      )\r\n    }\r\n  }\r\n\r\n  newNote = () => {\r\n    if (!this.state.notes.find(n => n.id === null)) {\r\n      const note = {\r\n        id: null,\r\n        title: '',\r\n        content: '',\r\n        created: new Date(),\r\n        updated: null,\r\n        important: false,\r\n        notification: null,\r\n        position: {\r\n          x: 0,\r\n          y: 0\r\n        },\r\n        user: null,\r\n        color: 'yellow'\r\n      }\r\n      this.setState({\r\n        notes: this.state.notes.concat(note)\r\n      })\r\n    }\r\n  }\r\n\r\n  saveNote = note => {\r\n    if (note.title && note.content) {\r\n      clearTimeout(note.saveTimeout)\r\n      note.saveTimeout = setTimeout(() => {\r\n        if (this.state.user) {\r\n          if (note.id === null) {\r\n            noteService\r\n              .create(note)\r\n              .then(createdNote => {\r\n                createdNote.notification = 'Note saved'\r\n                const index = this.state.notes.findIndex(n => n.id === null)\r\n                const notes = update(this.state.notes, {\r\n                  [index]: {\r\n                    $set: createdNote\r\n                  }\r\n                })\r\n                this.setState({\r\n                  notes: notes\r\n                })\r\n                this.hideNotification(createdNote)\r\n              })\r\n              .catch(error => console.log(error))\r\n          } else {\r\n            noteService\r\n              .update(note)\r\n              .then(updatedNote => {\r\n                updatedNote.notification = 'Note saved'\r\n                const index = this.state.notes.findIndex(\r\n                  n => n.id === updatedNote.id\r\n                )\r\n                const notes = update(this.state.notes, {\r\n                  [index]: {\r\n                    $set: updatedNote\r\n                  }\r\n                })\r\n                this.setState({\r\n                  notes: notes\r\n                })\r\n                this.hideNotification(updatedNote)\r\n              })\r\n              .catch(error => console.log(error))\r\n          }\r\n        } else {\r\n          note.notification = 'Login to save note'\r\n          const index = this.state.notes.findIndex(n => n.id === note.id)\r\n          const notes = update(this.state.notes, {\r\n            [index]: {\r\n              $set: note\r\n            }\r\n          })\r\n          this.setState({\r\n            notes: notes\r\n          })\r\n          this.hideNotification(note)\r\n        }\r\n      }, 3000)\r\n    }\r\n  }\r\n\r\n  handleRemove = note => () => {\r\n    if (!note.author) {\r\n      if (window.confirm('Are you sure you want to remove this note?')) {\r\n        if (note.id === null) {\r\n          const notes = this.state.notes.filter(n => n.id !== note.id)\r\n          this.setState({\r\n            notes: notes\r\n          })\r\n        } else {\r\n          noteService\r\n            .remove(note)\r\n            .then(response => {\r\n              const notes = this.state.notes.filter(n => n.id !== note.id)\r\n              this.setState({\r\n                notes: notes\r\n              })\r\n            })\r\n            .catch(error => {\r\n              const notes = this.state.notes.filter(n => n.id !== note.id)\r\n              this.setState({\r\n                notes: notes\r\n              })\r\n            })\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  handleDrag = note => (event, ui) => {\r\n    const position = {\r\n      x: +note.position.x + +ui.deltaX.toFixed(0),\r\n      y: +note.position.y + +ui.deltaY.toFixed(0)\r\n    }\r\n    const index = this.state.notes.findIndex(n => n.id === note.id)\r\n    const notes = update(this.state.notes, {\r\n      [index]: {\r\n        ['modified']: {\r\n          $set: true\r\n        },\r\n        ['position']: {\r\n          $set: position\r\n        }\r\n      }\r\n    })\r\n    this.setState({\r\n      notes: notes\r\n    })\r\n    this.saveNote(notes[index])\r\n  }\r\n\r\n  handleInputChange = note => event => {\r\n    const value = event.target.value\r\n    const name = event.target.name\r\n    if (note) {\r\n      const index = this.state.notes.findIndex(n => n.id === note.id)\r\n      const notes = update(this.state.notes, {\r\n        [index]: {\r\n          ['modified']: {\r\n            $set: true\r\n          },\r\n          [name]: {\r\n            $set: value\r\n          }\r\n        }\r\n      })\r\n      this.setState({\r\n        notes: notes\r\n      })\r\n      this.saveNote(notes[index])\r\n    } else {\r\n      this.setState({\r\n        [name]: value\r\n      })\r\n    }\r\n  }\r\n\r\n  render() {\r\n    const notes = this.state.notes.filter(\r\n      note =>\r\n        note.title.toLowerCase().includes(this.state.filter.toLowerCase()) ||\r\n        note.content.toLowerCase().includes(this.state.filter.toLowerCase())\r\n    )\r\n    return (\r\n      <div id=\"content\">\r\n        <Navbar\r\n          login={this.login}\r\n          logout={this.logout}\r\n          handleInputChange={this.handleInputChange}\r\n          filter={this.state.filter}\r\n          username={this.state.username}\r\n          password={this.state.password}\r\n          user={this.state.user}\r\n          loginMessage={this.state.loginMessage}\r\n        />{' '}\r\n        <Notes\r\n          notes={notes}\r\n          newNote={this.newNote}\r\n          handleRemove={this.handleRemove}\r\n          handleDrag={this.handleDrag}\r\n          user={this.state.user}\r\n          handleInputChange={this.handleInputChange}\r\n        />{' '}\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default App\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n)\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href)\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets see https://github.com/facebook/create-react-app/issues/2374\n      return\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config)\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          )\n        })\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config)\n      }\n    })\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing\n        if (installingWorker === null) {\n          return\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              )\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration)\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.')\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration)\n              }\n            }\n          }\n        }\n      }\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error)\n    })\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type')\n      if (\n        response.status === 404 ||\n        (contentType !== null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload()\n          })\n        })\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config)\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      )\n    })\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister()\n    })\n  }\n}\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport './index.css'\nimport App from './App'\nimport * as serviceWorker from './serviceWorker'\n\nReactDOM.render(<App />, document.getElementById('root'))\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister()\n"],"sourceRoot":""}