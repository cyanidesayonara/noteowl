{"version":3,"sources":["components/FilterNotes.js","components/Notification.js","components/Date.js","components/Delete.js","components/Note.js","components/Notes.js","services/notes.js","App.js","serviceWorker.js","index.js"],"names":["FilterNotes","_ref","filterValue","handleFilterChange","react_default","a","createElement","className","placeholder","value","onChange","Notification","message","Date","date","dist_default","Delete","note","handleRemove","author","type","onClick","Note","handleDrag","saveNote","handleInputChange","react_draggable_default","cancel","position","bounds","onStop","onDrag","components_Notification","notification","onSubmit","lib_default","onBlur","onResize","e","title","components_Date","content","components_Delete","Notes","notes","id","map","components_Note","key","services_notes","getAll","axios","get","then","response","data","create","post","update","put","concat","remove","delete","App","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","hideNotification","setTimeout","index","state","findIndex","n","defineProperty","$set","setState","newNote","find","important","x","y","noteService","createdNote","filter","catch","error","console","log","updatedNote","window","confirm","event","ui","deltaX","toFixed","deltaY","prop","target","_this2","document","ReactGA","initialize","pageview","_this3","toLowerCase","includes","components_FilterNotes","undefined","components_Notes","Component","Boolean","location","hostname","match","ReactDOM","render","src_App","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.1a34a85c.chunk.js","sourcesContent":["import React from 'react'\n\nconst FilterNotes = ({ filterValue, handleFilterChange }) => {\n  return (\n    <div className=\"d-none\">\n      <input\n        placeholder=\"Filter notes\"\n        value={ filterValue }\n        onChange={ handleFilterChange }\n      />\n    </div>\n  )\n}\n\nexport default FilterNotes","import React from 'react'\n\nconst Notification = ({ message }) => {\n  if (message === null) {\n    return null\n  }\n  return (\n    <div className=\"notification\">\n      { message }\n    </div>\n  )\n}\n\nexport default Notification","import React from 'react'\nimport Moment from 'react-moment'\n\nconst Date = ({ date }) => {\n  if (date === null) {\n    return null\n  }\n  return (\n    <Moment\n      date={ date }\n    />\n  )\n}\n\nexport default Date","import React from 'react'\n\nconst Delete = ({\n  note,\n  handleRemove,\n}) => {\n  if (note.author !== '') {\n    return null\n  }\n  return (\n    <button type='button' onClick={ handleRemove(note) }>\n      Delete\n    </button>\n  )\n}\n\nexport default Delete","import React from 'react'\nimport TextareaAutosize from 'react-autosize-textarea'\nimport Draggable from 'react-draggable'\nimport Notification from './Notification'\nimport Date from './Date'\nimport Delete from './Delete'\n\nconst Note = ({\n  note,\n  handleRemove,\n  handleDrag,\n  saveNote,\n  handleInputChange,\n}) => {\n  return (\n    <Draggable\n      cancel='.note form>*'\n      position={ note.position }\n      bounds='parent'\n      onStop={ saveNote(note) }\n      onDrag={ handleDrag(note) }\n    >\n      <div className='note'>\n        <Notification message={ note.notification } />\n        <form onSubmit={ saveNote(note) }>\n          <h3>\n            <TextareaAutosize\n              onBlur={ saveNote(note) }\n              onResize={(e) => {}}\n              value={ note.title }\n              placeholder='Title'\n              onChange={ handleInputChange('title', note) }\n            />\n            <span className='border'></span>\n          </h3>\n          <Date date={ note.date } />\n          <p>\n            <TextareaAutosize\n              onBlur={ saveNote(note) }\n              onResize={(e) => {}}\n              value={ note.content }\n              placeholder='Add text here'\n              onChange={ handleInputChange('content', note) }\n            />\n            <span className='border'></span>\n          </p>\n          <Delete note={ note } handleRemove={ handleRemove } />\n        </form>\n      </div>\n    </Draggable>\n  )\n}\n\nexport default Note","import React from 'react'\nimport Note from './Note'\n\nconst Notes = ({\n  notes,\n  handleRemove,\n  handleDrag,\n  saveNote,\n  handleInputChange\n}) => {\n  return (\n    <div id='notes'>\n      { notes.map(note =>\n        <Note\n          key={ note.id }\n          note={ note }\n          handleRemove={ handleRemove }\n          handleDrag={ handleDrag }\n          saveNote={ saveNote }\n          handleInputChange={ handleInputChange }\n        />\n      ) }\n    </div>\n  )\n}\n\nexport default Notes","import axios from 'axios'\nconst baseUrl = '/notes'\n\nconst getAll = () => {\n  const request = axios.get(baseUrl)\n  return request.then(response => response.data)\n}\n\nconst create = (note) => {\n  const request = axios.post(baseUrl, note)\n  return request.then(response => response.data)\n}\n\nconst update = (note) => {\n  const request = axios.put(`${baseUrl}/${note.id}`, note)\n  return request.then(response => response.data)\n}\n\nconst remove = (note) => {\n  const request = axios.delete(`${baseUrl}/${note.id}`)\n  return request.then(response => response.data)\n}\n\nexport default { getAll, create, update, remove }","import React, { Component } from 'react'\nimport FilterNotes from './components/FilterNotes.js'\nimport Notes from './components/Notes.js'\nimport noteService from './services/notes.js'\nimport update from 'immutability-helper'\nimport ReactGA from 'react-ga'\n\nclass App extends Component {\n  constructor(props) {\n    super(props)\n    this.state = {\n      notes: [],\n      filter: '',\n    }\n  }\n\n  // set notification to null after timeout\n  hideNotification = (note) => {\n    const timeout = 3000\n    setTimeout(() => {\n      const index = this.state.notes.findIndex(n => n.id === note.id)\n      // if note not found, index will be -1\n      if (index >= 0) {\n        const notes = update(this.state.notes, {\n          [index]: { ['notification']: { $set: null } }\n        })\n        this.setState({ notes: notes })\n      }\n    }, timeout)\n  }\n\n  componentDidMount() {\n    document.title = 'NoteOwl'\n    noteService\n      .getAll()\n      .then(notes => { this.setState({ notes: notes }) })\n    ReactGA.initialize('UA-120584024-4')\n    ReactGA.pageview('/')\n  }\n\n  newNote = () => {\n    if (!this.state.notes.find(n => n.id === 0)) {\n      const note = {\n        id: 0,\n        title: '',\n        author: '',\n        content: '',\n        date: null,\n        important: false,\n        notification: null,\n        position: {\n          x: 0,\n          y: 0\n        }\n      }\n      this.setState({ notes: this.state.notes.concat(note) })\n    }\n  }\n\n  saveNote = (note) => () => {\n    if (!note.author) {\n      if (note.title && note.content) {\n        if (note.id === 0) {\n          noteService\n            .create(note)\n            .then(createdNote => {\n              createdNote.notification = 'Note saved'\n              const notes = this.state.notes.filter(n => n.id !== 0)\n              this.setState({ notes: notes.concat(createdNote) })\n              this.hideNotification(createdNote)\n            })\n            .catch(error => { console.log(error) })\n        } else {\n          noteService\n            .update(note)\n            .then(updatedNote => {\n              updatedNote.notification = 'Note saved'\n              const notes = this.state.notes.filter(n => n.id !== updatedNote.id)\n              this.setState({ notes: notes.concat(updatedNote) })\n              this.hideNotification(updatedNote)\n            })\n            .catch(error => { console.log(error) })\n        }\n      }\n    }\n  }\n\n  handleRemove = (note) => () => {\n    if (!note.author) {\n      if (window.confirm('Are you sure you want to remove this note?')) {\n        if (note.id === 0) {\n          const notes = this.state.notes.filter(n => n.id !== note.id)\n          this.setState({ notes: notes })          \n        } else {\n          noteService\n            .remove(note)\n            .then(response => {\n              const notes = this.state.notes.filter(n => n.id !== note.id)\n              this.setState({ notes: notes })\n            })\n            .catch(error => {\n              console.log(error)\n              const notes = this.state.notes.filter(n => n.id !== note.id)\n              this.setState({ notes: notes })\n            })\n        }\n      }\n    }\n  }\n\n  handleDrag = (note) => (event, ui) => {\n    const notes = this.state.notes.filter(n => n.id !== note.id)\n    if (!note.position) {\n      note.position = {\n        x: 0,\n        y: 0\n      }\n    }\n    note.position = {\n      x: +note.position.x + +ui.deltaX.toFixed(0),\n      y: +note.position.y + +ui.deltaY.toFixed(0)\n    }\n    this.setState({ notes: notes.concat(note) })\n  }\n\n  handleInputChange = (prop, note) => {\n    return (event) => {\n      const value = event.target.value\n      if (note) {\n        const index = this.state.notes.findIndex(n => n.id === note.id)\n        const notes = update(this.state.notes, {\n          [index]: { [prop]: { $set: value } }\n        })\n        this.setState({ notes: notes })\n      } else {\n        this.setState({ [prop]: value })\n      }\n    }\n  }\n\n  render() {\n    const notes = this.state.notes.filter(note =>\n      note.title.toLowerCase().includes(this.state.filter.toLowerCase()) ||\n      note.author.toLowerCase().includes(this.state.filter.toLowerCase()) ||\n      note.content.toLowerCase().includes(this.state.filter.toLowerCase())\n    )\n    return (\n      <div id=\"content\">\n        <nav>\n          <h1>\n            Noteowl\n          </h1>\n          <button onClick={ this.newNote }>\n            Add New Note\n          </button>\n          <FilterNotes\n            filterValue={ this.state.filter }\n            handleFilterChange={ this.handleInputChange('filter', undefined) }\n          />\n        </nav>\n        <Notes\n          notes={ notes }\n          handleRemove={ this.handleRemove }\n          handleDrag={ this.handleDrag }\n          saveNote={ this.saveNote }\n          handleInputChange={ this.handleInputChange }\n        />\n      </div>\n    )\n  }\n}\n\nexport default App","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n)\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href)\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets see https://github.com/facebook/create-react-app/issues/2374\n      return\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config)\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          )\n        })\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config)\n      }\n    })\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing\n        if (installingWorker === null) {\n          return\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              )\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration)\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.')\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration)\n              }\n            }\n          }\n        }\n      }\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error)\n    })\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type')\n      if (\n        response.status === 404 ||\n        (contentType !== null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload()\n          })\n        })\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config)\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      )\n    })\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister()\n    })\n  }\n}\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport './index.css'\nimport App from './App'\nimport * as serviceWorker from './serviceWorker'\n\nReactDOM.render(<App />, document.getElementById('root'))\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister()"],"sourceRoot":""}